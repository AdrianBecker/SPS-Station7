
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/lib' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK INDICATOR_CTRL
VAR_INPUT
	xEMERGENCY	:	BOOL;
	iSTATE				:	INT;
END_VAR
VAR_OUTPUT
	_xIND_EMERGENCY			:	BOOL;
	_xIND_INIT_POS				:	BOOL;
	_xIND_PB_START			:	BOOL;
	_xIND_STATE0				:	BOOL;
	_xIND_STATE1				:	BOOL;
	_xIND_STATE2				:	BOOL;
	_xIND_STATE3				:	BOOL;
	_xIND_STATE4				:	BOOL;
	_xIND_STATE5				:	BOOL;
	_xIND_STATE6				:	BOOL;
	_xIND_STATE7				:	BOOL;
	_xIND_STATE8				:	BOOL;
END_VAR
VAR
	bl_clock	:	BLINK;
	xClock		:	BOOL;
	xInitPos	:	BOOL;
END_VAR
(* @END_DECLARATION := '0' *)
_FBD_BODY
_NETWORKS : 13
_NETWORK

_COMMENT
'Clock needs to run on emergency or if the state is 0 (i.e. if start is possible.'
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_FUNCTIONBLOCK
bl_clock
_BOX_EXPR : 3
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
xEMERGENCY
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
0
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
OR
_OPERAND
_EXPRESSION
_POSITIV
T#250ms
_OPERAND
_EXPRESSION
_POSITIV
T#250ms
_EXPRESSION
_POSITIV
BLINK
_OUTPUTS : 0
_OPERAND
_EXPRESSION
_POSITIV
bl_clock.ENABLE
_EXPRESSION
_POSITIV
AND
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
xClock
_NETWORK

_COMMENT
'Reset button should blink in case of emergency, indicating that a reset is needed.'
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
xEMERGENCY
_OPERAND
_EXPRESSION
_POSITIV
xClock
_EXPRESSION
_POSITIV
AND
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xIND_EMERGENCY
_NETWORK

_COMMENT
'The machine is in its initial position in state 0 (ready for start) or state 8 (waiting for part to be picked up).'
_END_COMMENT
_ASSIGN
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
0
_EXPRESSION
_POSITIV
EQ
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
8
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
OR
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
xInitPos
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xIND_INIT_POS
_NETWORK

_COMMENT
'PB start should blink if start is possible (i.e. in state 0) or should light up permanently in states other than 0 and 8 (i.e. when the machine is not in its initial position).'
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERATOR
_BOX_EXPR : 2
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
0
_EXPRESSION
_POSITIV
EQ
_OPERAND
_EXPRESSION
_POSITIV
xClock
_EXPRESSION
_POSITIV
AND
_OPERAND
_EXPRESSION
_NEGATIV
xInitPos
_EXPRESSION
_POSITIV
OR
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xIND_PB_START
_NETWORK

_COMMENT
'Indicate state 0, which is also the only state where a start pulse is allowed.'
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
0
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT0
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
1
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT1
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
2
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT2
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
3
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT3
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
4
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT4
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
5
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT5
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
6
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT6
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
7
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT7
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
iSTATE
_OPERAND
_EXPRESSION
_POSITIV
8
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
_xOUT8

END_FUNCTION_BLOCK
